<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Plugin Identity Store</title>
    </properties>
    <body>
        <section name="Plugin Identity Store">
            <p>
                <img src="images/identitystore.png" />
            </p>
            <subsection name="Introduction">
                <p>This plugin stores and manipulates identities. An identity is composed of attributes. Each attribute can be read, written or certified by the application through REST APIs.</p>
                <p>This plugin allows admin users to define the identity referential</p>
            </subsection>
            <subsection name="Identities referential">
                <p></p>
            </subsection>
            <subsection name="REST API">
                <p>
                   The plugin provides a REST API to manage identities. Several versions of the API can be called:
                   <ul>
                        <li>Version 2 : the URL to use is <code>/identity/rest/identitystore/v2/identity</code>. This version uses the objects of the packages <code>fr.paris.lutece.plugins.identitystore.v2.*</code> of the <code>library-identitybusiness</code>.</li>
                        <li>Version 3 : the URL to use is <code>/identity/rest/identitystore/v3/identity</code>. This version uses the objects of the packages <code>fr.paris.lutece.plugins.identitystore.v3.*</code> of the <code>library-identitybusiness</code>.</li>
                   </ul>
                </p>
                <p>
                    Version 2 can be used only for getting an Identity by its CUID or GUID. Only version 3 offers full API usage (CRUD and research).
                </p>
            </subsection>
            <subsection name="Environment">
                <p>
                    To run IDS, you will need a running [Elasticsearch instance (8+)](https://www.elastic.co/fr/downloads/elasticsearch). No particular configuration is needed, you can download and run it.
                </p>
                <p>
                    IDS uses [PostgreSQL 10+](https://www.postgresql.org/) as relational database to store its inner data.
                </p>
            </subsection>
            <subsection name="Configuration">
                <p>
                    There is one particular configuration found in <code>identitystore_context.xml file</code> that uses (https://docs.spring.io/spring-framework/docs/3.2.0.M1/reference/html/scheduling.html)[spring tasks] to schedule the full indexation of identities in Elasticsearch (as Lutece Daemon cannot be croned yet).
                    <div class="source">
                        <pre>
&lt;!-- Schedule full E/S identities reindexing --&gt;
&lt;bean id="identitystore.fullIndexer" class="fr.paris.lutece.plugins.identitystore.service.indexer.elastic.index.task.FullIndexTask" &gt;&lt;/bean&gt;
&lt;task:scheduler id="identitystore.fullIndexerScheduler" /&gt;
&lt;task:scheduled-tasks scheduler="identitystore.fullIndexerScheduler"&gt;
    &lt;task:scheduled ref="identitystore.fullIndexer" method="run" cron="${identitystore.index.full.cron}"/&gt;
&lt;/task:scheduled-tasks&gt;
                        </pre>
                        Where
                        <ul>
                            <li><code>identitystore.fullIndexer</code> is the bean that performs the full indexing job</li>
                            <li><code>identitystore.fullIndexerSchedulerr</code> is the spring scheduler instance that schedules the <code>identitystore.fullIndexer</code> job</li>
                            <li><code>method="run"</code> is the name of the method that is bound in the <code>identitystore.fullIndexer</code> bean</li>
                            <li><code>identitystore.index.full.cron</code> is the CRON expression and must be a property of <code>identitystore.properties</code></li>
                        </ul>
                    </div>
                </p>
            </subsection>
            <subsection name="Usage">
                <p>
                    The plugins exposes web methods to manage identities. Check <em>/jsp/site/Portal.jsp?page=swaggerui</em> page for more details about these methods (coming soon..)
                </p>
            </subsection>
        </section>
    </body>
</document>

